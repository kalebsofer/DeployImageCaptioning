services:
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    image: kalebrs/imagecaption-frontend:latest
    env_file:
      - .env.prod
    environment:
      - ENV=dev
      - BACKEND_URL=http://backend:8051
    depends_on:
      backend:
        condition: service_healthy
      postgres:
        condition: service_healthy
    networks:
      - app-network
      - traefik_default
    healthcheck:
      test: [ "CMD-SHELL", "curl -v http://localhost:8501/_stcore/health || echo 'Health check failed' >&2" ]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s
    labels:
      - "traefik.http.routers.img.rule=Host(`img.sulaiman-ov.com`)"

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    image: kalebrs/imagecaption-backend:latest
    env_file:
      - .env.prod
    environment:
      - ENV=prod
      - MINIO_SECURE=false
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:8051/health" ]
      interval: 30s
      timeout: 30s
      retries: 5
      start_period: 60s
    networks:
      - app-network
    # ports:
    #   - "8051:8051"

  postgres:
    build:
      context: ./postgres
      dockerfile: Dockerfile
    image: kalebrs/imagecaption-postgres:latest
    env_file:
      - .env.prod
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}" ]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s
    networks:
      - app-network
    # ports:
    #   - "5432:5432"

  pgadmin:
    image: dpage/pgadmin4:latest
    env_file:
      - .env.prod
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_DEFAULT_EMAIL}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_DEFAULT_PASSWORD}
    ports:
      - "5050:80"
    networks:
      - app-network
    restart: unless-stopped
    volumes:
      - pgadmin_data:/var/lib/pgadmin

networks:
  app-network:
    driver: bridge
  traefik_default:
    external: true

volumes:
  letsencrypt:
  webroot:
  postgres_data:
    driver: local
  pgadmin_data:
    driver: local
